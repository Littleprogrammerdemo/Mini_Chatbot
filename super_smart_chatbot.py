import random
import datetime
import re

# –ë–∞–∑–æ–≤–∏ –æ—Ç–≥–æ–≤–æ—Ä–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
responses = {
    "greeting": [
        "–ó–¥—Ä–∞–≤–µ–π! –†–∞–¥–≤–∞–º —Å–µ –¥–∞ —Ç–µ –≤–∏–¥—è! üòä",
        "–•–µ–π! –ö–∞–∫ –º–∏–Ω–∞–≤–∞ –¥–µ–Ω—è—Ç —Ç–∏?",
        "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫–≤–æ –Ω–æ–≤–æ?",
        "–ô–æ! –ö–∞–∫ —Å–∏ –¥–Ω–µ—Å?"
    ],
    "how_are_you": [
        "–î–æ–±—Ä–µ —Å—ä–º, –±–ª–∞–≥–æ–¥–∞—Ä—è, —á–µ –ø–∏—Ç–∞—à! –ê —Ç–∏?",
        "–ß—É–¥–µ—Å–Ω–æ, –±–ª–∞–≥–æ–¥–∞—Ä—è! –ê –ø—Ä–∏ —Ç–µ–± –∫–∞–∫ –µ?",
        "–í—Å–∏—á–∫–æ –µ –Ω–∞—Ä–µ–¥, –∞ –ø—Ä–∏ —Ç–µ–±?",
        "–ê–∑ —Å—ä–º –ø—Ä–æ—Å—Ç–æ –∫–æ–¥, –Ω–æ —Å–µ —á—É–≤—Å—Ç–≤–∞–º –æ—Ç–ª–∏—á–Ω–æ!"
    ],
    "name": [
        "–ê–∑ —Å—ä–º —Ç–≤–æ—è—Ç Python —á–∞—Ç–±–æ—Ç ü§ñ",
        "–ú–æ–∂–µ—à –¥–∞ –º–µ –Ω–∞—Ä–∏—á–∞—à –ë–æ—Ç–∏—Ç–æ.",
        "–ü—Ä–æ—Å—Ç–æ –º–µ –Ω–∞—Ä–∏—á–∞–π –ø—Ä–∏—è—Ç–µ–ª!"
    ],
    "time": [
        lambda: f"–°–µ–≥–∞ –µ {datetime.datetime.now().strftime('%H:%M:%S')}",
        lambda: f"–ß–∞—Å—ä—Ç –µ {datetime.datetime.now().strftime('%H:%M')}"
    ],
    "date": [
        lambda: f"–î–Ω–µ—Å –µ {datetime.datetime.now().strftime('%d.%m.%Y')}",
        lambda: f"–î–∞—Ç–∞—Ç–∞ –µ {datetime.datetime.now().strftime('%A, %d %B %Y')}"
    ],
    "joke": [
        "–ó–∞—â–æ –ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç–∏—Ç–µ –Ω–µ –æ–±–∏—á–∞—Ç –ø—Ä–∏—Ä–æ–¥–∞—Ç–∞? ‚Äì –ò–º–∞ —Ç–≤—ä—Ä–¥–µ –º–Ω–æ–≥–æ –±—ä–≥–æ–≤–µ üêõ",
        "–ö–∞–∫–≤–æ –∫–∞–∑–≤–∞ –µ–¥–∏–Ω –±–∏—Ç –Ω–∞ –¥—Ä—É–≥? ‚Äì –ë—ä–¥–∏ –ø–æ–∑–∏—Ç–∏–≤–µ–Ω! üòÑ",
        "–ü—Ä–æ–≥—Ä–∞–º–∏—Å—Ç –≤–ª–∏–∑–∞ –≤ –±–∞—Ä... –∏ –ø–æ—Ä—ä—á–≤–∞ 1 –±–∏—Ä–∞, 10 –±–∏—Ä–∏, 111 –±–∏—Ä–∏...",
        "–ó–∞—â–æ –∫–æ–º–ø—é—Ç—Ä–∏—Ç–µ –Ω–∏–∫–æ–≥–∞ –Ω–µ —Å–µ —É–º–æ—Ä—è–≤–∞—Ç? –ó–∞—â–æ—Ç–æ –∏–º–∞—Ç –º–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å–æ—Ä–∏!"
    ],
    "weather": [
        "–ê–∑ –Ω–µ –º–æ–≥–∞ –¥–∞ –ø—Ä–æ–≤–µ—Ä—è –≤—Ä–µ–º–µ—Ç–æ, –Ω–æ –¥–∞–Ω–æ –µ —Å–ª—ä–Ω—á–µ–≤–æ –ø—Ä–∏ —Ç–µ–±! ‚òÄÔ∏è",
        "–ó–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ —Å–∞–π—Ç, –∞–∑ —Å—ä–º –ø—Ä–æ—Å—Ç–æ –±–æ—Ç.",
        "–ù–∞–¥—è–≤–∞–º —Å–µ –≤—Ä–µ–º–µ—Ç–æ –¥–∞ –µ –¥–æ–±—Ä–æ, –∫—ä–¥–µ—Ç–æ –∏ –¥–∞ —Å–∏!"
    ],
    "thanks": [
        "–ú–æ–ª—è, –≤–∏–Ω–∞–≥–∏ —Å—ä–º —Ç—É–∫ –¥–∞ –ø–æ–º–æ–≥–Ω–∞!",
        "–ù—è–º–∞ –∑–∞ –∫–∞–∫–≤–æ!",
        "–†–∞–¥–≤–∞–º —Å–µ, —á–µ –ø–æ–º–æ–≥–Ω–∞—Ö!"
    ],
    "bye": [
        "–ß–∞–æ! –ü—Ä–∏—è—Ç–µ–Ω –¥–µ–Ω!",
        "–î–æ–≤–∏–∂–¥–∞–Ω–µ –∏ –¥–æ —Å–∫–æ—Ä–æ!",
        "–©–µ —Å–µ –≤–∏–¥–∏–º –ø–∞–∫! üëã"
    ],
    "default": [
        "–ú–º–º... –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞–∑–∫–∞–∂–∏ –º–∏ –æ—â–µ.",
        "–ù–µ —Å—ä–º —Å–∏–≥—É—Ä–µ–Ω, —á–µ —Ä–∞–∑–±—Ä–∞—Ö, –Ω–æ –∑–≤—É—á–∏ –ª—é–±–æ–ø–∏—Ç–Ω–æ!",
        "–û, —Ç–æ–≤–∞ –µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! üòä",
        "–û–ø–∏—Ç–∞–π —Å –¥—Ä—É–≥–∏ –¥—É–º–∏, –Ω–µ —Å—ä–º –º–Ω–æ–≥–æ –¥–æ–±—ä—Ä —Å –≤—Å–∏—á–∫–æ –æ—â–µ."
    ]
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞ —Ä–∞–∑–ø–æ–∑–Ω–∞–≤–∞–Ω–µ –Ω–∞ –∫–ª—é—á–æ–≤–∏ –¥—É–º–∏ –∏ —à–∞–±–ª–æ–Ω–∏
def get_response(user_input):
    user_input = user_input.lower()

    # –ü–æ–∑–¥—Ä–∞–≤–∏
    if re.search(r"\b(–∑–¥—Ä–∞–≤–µ–π|–ø—Ä–∏–≤–µ—Ç|—Ö–µ–π|–π–æ)\b", user_input):
        return random.choice(responses["greeting"])

    # –ö–∞–∫ —Å–∏
    if re.search(r"\b(–∫–∞–∫ —Å–∏|–∫–∞–∫ —Å–µ —á—É–≤—Å—Ç–≤–∞—à|–∫–∞–∫–≤–æ –ø—Ä–∞–≤–∏—à)\b", user_input):
        return random.choice(responses["how_are_you"])

    # –ò–º–µ
    if re.search(r"\b(–∏–º–µ|–∫–∞–∫ —Å–µ –∫–∞–∑–≤–∞—à)\b", user_input):
        return random.choice(responses["name"])

    # –ß–∞—Å/–≤—Ä–µ–º–µ
    if re.search(r"\b(—á–∞—Å|–≤—Ä–µ–º–µ|–∫–æ–≥–∞ –µ)\b", user_input):
        return random.choice(responses["time"])()

    # –î–∞—Ç–∞/–¥–µ–Ω
    if re.search(r"\b(–¥–∞—Ç–∞|–¥–µ–Ω|–∫–æ–π –¥–µ–Ω –µ)\b", user_input):
        return random.choice(responses["date"])()

    # –®–µ–≥–∞
    if re.search(r"\b(—à–µ–≥–∞|–≤–∏—Ü|—Å–º–µ—à–Ω–æ|—Å–º—è—Ö)\b", user_input):
        return random.choice(responses["joke"])

    # –í—Ä–µ–º–µ (–ø–æ–Ω–µ–∂–µ –º–Ω–æ–≥–æ —Ö–æ—Ä–∞ –ø–∏—Ç–∞—Ç)
    if re.search(r"\b(–≤—Ä–µ–º–µ—Ç–æ|–∫–∞–∫–≤–æ –µ –≤—Ä–µ–º–µ—Ç–æ|–ø—Ä–æ–≥–Ω–æ–∑–∞)\b", user_input):
        return random.choice(responses["weather"])

    # –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    if re.search(r"\b(–±–ª–∞–≥–æ–¥–∞—Ä—è|–º–µ—Ä—Å–∏|–±–ª–∞–≥–æ–¥—è)\b", user_input):
        return random.choice(responses["thanks"])

    # –°–±–æ–≥—É–≤–∞–Ω–µ
    if re.search(r"\b(—á–∞–æ|—Å–±–æ–≥–æ–º|–¥–æ–≤–∏–∂–¥–∞–Ω–µ|–∏–∑—Ö–æ–¥|–ø—Ä–µ–∫—Ä–∞—Ç–∏)\b", user_input):
        return random.choice(responses["bye"])

    # –ß–∏—Å–ª–æ–≤–∏ –∏–∑—Ä–∞–∑–∏ –∏ —Å–º—è—Ç–∞–Ω–µ (–º–∏–Ω–∏–º–∞–ª–Ω–æ)
    calc_match = re.search(r"(\d+)\s*([\+\-\*\/])\s*(\d+)", user_input)
    if calc_match:
        num1, op, num2 = calc_match.groups()
        num1, num2 = int(num1), int(num2)
        try:
            if op == '+':
                return f"–†–µ–∑—É–ª—Ç–∞—Ç—ä—Ç –µ {num1 + num2}"
            elif op == '-':
                return f"–†–µ–∑—É–ª—Ç–∞—Ç—ä—Ç –µ {num1 - num2}"
            elif op == '*':
                return f"–†–µ–∑—É–ª—Ç–∞—Ç—ä—Ç –µ {num1 * num2}"
            elif op == '/':
                return f"–†–µ–∑—É–ª—Ç–∞—Ç—ä—Ç –µ {num1 / num2:.2f}"
        except Exception:
            return "–ò–º–∞—à–µ –ø—Ä–æ–±–ª–µ–º —Å—ä—Å —Å–º–µ—Ç–∫–∏—Ç–µ."

    # –ê–∫–æ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞ –Ω–∏—â–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ
    return random.choice(responses["default"])

def main():
    print("ü§ñ Super Smart Python ChatBot ‚Äî –Ω–∞–ø–∏—à–∏ '—á–∞–æ' –∑–∞ –∏–∑—Ö–æ–¥")
    while True:
        user_text = input("–¢–∏: ").strip()
        if re.search(r"\b(—á–∞–æ|—Å–±–æ–≥–æ–º|–¥–æ–≤–∏–∂–¥–∞–Ω–µ|–∏–∑—Ö–æ–¥|–ø—Ä–µ–∫—Ä–∞—Ç–∏)\b", user_text.lower()):
            print("–ë–æ—Ç:", random.choice(responses["bye"]))
            break
        print("–ë–æ—Ç:", get_response(user_text))

if __name__ == "__main__":
    main()
